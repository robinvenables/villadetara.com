name: Deploy staging.robinvenables.com

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: ${{ vars.HUGO_VERSION }}
      LOG_LEVEL: ${{ vars.LOG_LEVEL }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_USER: ${{ secrets.SSH_USER }}        
      WEBSITE: ${{ vars.WEBSITE }}

    steps:
    - name: Setup environment
      run: |
        BASE_URL="https://staging.${WEBSITE}"
        echo "BASE_URL=${BASE_URL}" >> ${GITHUB_ENV}
        HUGO_DOWNLOAD="https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb"
        echo "HUGO_DOWNLOAD=${HUGO_DOWNLOAD}" >> ${GITHUB_ENV}
        REMOTE_HOST="${SSH_USER}@staging.${WEBSITE}"
        echo "REMOTE_HOST=${REMOTE_HOST}" >> ${GITHUB_ENV}
        RSYNC_OPTIONS="--compress --delete --recursive --verbose"
        echo "RSYNC_OPTIONS=${RSYNC_OPTIONS}" >> ${GITHUB_ENV}
        SSH_OPTIONS="-p ${SSH_PORT} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /home/runner/.ssh/id_ed25519"
        echo "SSH_OPTIONS=${SSH_OPTIONS}" >> ${GITHUB_ENV}
        TRANSFER_DIR="staging.${WEBSITE}/public"
        echo "TRANSFER_DIR=${TRANSFER_DIR}" >> ${GITHUB_ENV}
        WEBSITE_DIR="/volume1/web/staging.${WEBSITE}"
        echo "WEBSITE_DIR=${WEBSITE_DIR}" >> ${GITHUB_ENV}

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Install Hugo
      run: |
        wget -O ${{ runner.temp }}/hugo.deb ${{ env.HUGO_DOWNLOAD }} && \
        sudo dpkg -i ${{ runner.temp }}/hugo.deb

    - name: Build website
      run: hugo --environment staging --minify --baseURL ${{ env.BASE_URL }} --logLevel ${LOG_LEVEL}

    - name: Setup SSH key
      run: |
        mkdir /home/runner/.ssh && \
          chmod 700 /home/runner/.ssh && \
          echo "${SSH_PRIVATE_KEY}" > /home/runner/.ssh/id_ed25519 && \
          chmod 600 /home/runner/.ssh/id_ed25519

    - name: rsync to Synology NAS
      run: rsync ${{ env.RSYNC_OPTIONS }} --rsh="ssh ${{ env.SSH_OPTIONS }}" public/* ${{ env.REMOTE_HOST }}:${{ env.TRANSFER_DIR }}

    - name: Copy to website directory
      run: ssh ${{ env.SSH_OPTIONS }} ${{ env.REMOTE_HOST }} "sudo cp -pr ${{ env.TRANSFER_DIR }}/* ${{ env.WEBSITE_DIR }}"
